<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper XML 설정 태그 -->

<!-- 이전의 Query문을 작성하던 interface와 같은 역할을 맡는다. -->

<!-- namespace : 연결할 Mapper 인터페이스 경로 및 이름 -->
<mapper namespace="com.projectcoding.project01.persistence.BoardMapper">
	
	<!-- 
		<resultMap> : DB 쿼리 반환 데이터와
			Entity(VO) 클래스의 멤버 변수 매핑을 정의하는 태그
		- 속성 :
		type : 연결할 클래스의 패키지와 이름
		id : SQL 쿼리 정의 태그에서 인식되는 이름
	 -->
	
	<resultMap type="com.projectcoding.project01.domain.BoardVO" id="boardResultMap">
		<!-- 
			<id> : key 컬럼 매핑 태그
			<result> : 일반 컬럼 매핑 태그
			- 속성 : 
			property : Entity(VO) 멤버 변수
			column : DB 테이블 컬럼
		 -->
		
		<id property="boardId" column="BOARD_ID"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="boardDateCreated" column="BOARD_DATE_CREATED"/>
		<result property="commentsCount" column="COMMENTS_COUNT"/>
		
	</resultMap>
	
	<!-- 
		<select>, <insert>, <update>, <delete> : SQL 쿼리 정의 태그
		- 속성 :
		id : Mapper 인터페이스 메소드 매핑 역할. (인터페이스 메소드와 이름이 같아야 연결이 된다.)
		
		resultMap : 쿼리 결과를 resultMap에 매핑. /주로 select에 사용 (쿼리의 결과 값을 저장 이전의 ResultSet의 역할을 맡는다.)
			<resultMap>태그에 id를 적용
			
		resultType : 쿼리 결과를 클래스에 매핑. /주로 select에 사용 
	 -->
	 
	 <!-- 
	 	#{변수명} : Mapper 인터페이스 메소드 매개변수와 매핑되어 전송된 데이터를 적용
	  -->
	 
	<insert id="insert">
		INSERT INTO BOARD VALUES(BOARD_ID, BOARD_TITLE, BOARD_CONTENTE, MEMBER_ID)
		(BOARD_SEQ.NEXTVAL, #{boardTitle}, #{boardContent}, #{memberId})
	</insert>
	
	<select id="selectList" resultMap="boardResultMap">
		<!-- 전체 게시글 조회 -->
		SELECT * FROM BOARD ORDER BY BOARD_ID DESC
	</select>
	
	<select id="selectOne" resultMap="boardResultMap">
	<!-- 상세 게시글 조회 -->
		SELECT * FROM BOARD WHERE BOARD_ID = #{boardId}
	</select>
	
	<update id="update">
	<!-- 상세 게시글 수정 -->
		UPDATE BOARD SET BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, BOARD_DATE_CREATED = SYSDATE
		WHERE BOARD_ID = #{boardId}
	</update>
	
	<delete id="delete">
	<!-- 상세 게시글 삭제 -->
		DELETE BOARD WHERE BOARD_ID = #{boardId}
	</delete>
	
	<!-- <select>에 resultMap을 반드시 넣어줘야 한다.  -->
	<select id="selectListByPagination" resultMap="boardResultMap">
		SELECT * FROM
		(
			SELECT ROW_NUMBER() OVER(ORDER BY BOARD_ID DESC)
			AS RN, BOARD.* FROM BOARD
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	<!-- 
		#{start} : pagination 객체의 getStart()
		#{end} : pagination 객체의 getEnd()
	 -->
	 
	<!-- resulType : 쿼리 결과를 자바 객체에 매핑하기 위해 사용 -->
	<select id="selectTotalCount" resultType="Integer">
		SELECT COUNT(*) TOTAL_COUNT FROM BOARD
	</select>
	
	<update id="updateCommentsCount">
		UPDATE BOARD
		SET COMMENTS_COUNT = COMMENTS_COUNT + #{amount}
		WHERE BOARD_ID = #{boardId}
	</update>
	
</mapper>